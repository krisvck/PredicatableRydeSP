'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var schema = _joi2.default.object().keys({
  api_key: _joi2.default.string().description('Your openrouteservice API key'),
  request: _joi2.default.string().valid('pois', 'list', 'stats').description('Returns additional information'),
  geometry: _joi2.default.object().keys({
    bbox: _joi2.default.array().length(2).items(_joi2.default.array().length(2)),
    geojson: _joi2.default.object().keys({
      type: _joi2.default.string().valid(['Point', 'LineString', 'Polygon']).description('The type of GeoJSON'),
      coordinates: _joi2.default.array().description('The coordinates of the GeoJSON object.')
    }).description('The GeoJSON Object'),
    buffer: _joi2.default.number().description("Buffers geometry of 'geojson' or 'bbox' with the specified value in meters.")
  }).description('GeoJSON object'),
  filters: _joi2.default.object().keys({
    category_ids: _joi2.default.array().min(1).max(5).items(_joi2.default.number()).description('Filter by ORS custom category IDs. See https://github.com/GIScience/openrouteservice-docs#places-response for the mappings.'),
    category_group_ids: _joi2.default.array().min(1).max(5).items(_joi2.default.number()).description('Filter by ORS custom category IDs. See https://github.com/GIScience/openrouteservice-docs#places-response for the mappings.')
  }),
  sortby: _joi2.default.string().valid(['distance', 'category']).description('Sort the results by distance or category, only works for pois request.'),
  limit: _joi2.default.number().description('Limits the number of results.'),
  host: _joi2.default.string().default('https://api.openrouteservice.org/pois').description('Determines the API url.'),
  mime_type: _joi2.default.string().valid(['application/json']).default('application/json').description('Determines the mime type of request.')
}).unknown(false);

exports.default = schema;