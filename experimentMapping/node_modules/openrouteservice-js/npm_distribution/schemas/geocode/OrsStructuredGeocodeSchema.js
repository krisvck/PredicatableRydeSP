'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var schema = _joi2.default.object().keys({
  api_key: _joi2.default.string().description('Your openrouteservice API key.'),
  address: _joi2.default.string().description('Full-text query against search endpoint.'),
  neighbourhood: _joi2.default.string().description('Neighbourhoods are vernacular geographic entities that may not necessarily be official administrative divisions but are important nonetheless.'),
  borough: _joi2.default.string().description('Boroughs are mostly known in the context of New York City, even though they may exist in other cities, such as Mexico City.'),
  locality: _joi2.default.string().description('Localities are equivalent to what are commonly referred to as cities.'),
  county: _joi2.default.string().description('Counties are administrative divisions between localities and regions.'),
  region: _joi2.default.string().description('Regions are normally the first-level administrative divisions within countries, analogous to states and provinces in the United States and Canada, respectively, though most other countries contain regions as well.'),
  postalcode: _joi2.default.string().description('Postal codes are used to aid in sorting mail with the format dictated by an administrative division, which is almost always countries. Among other reasons, postal codes are unique within a country so they are useful in geocoding as a shorthand for a fairly granular geographical location.'),
  country: _joi2.default.string().description('Countries are the highest-level administrative divisions supported in a search. In addition to full names, countries have common two- and three-letter abbreviations that are also supported values for the country parameter.'),
  sources: _joi2.default.array().items(_joi2.default.string().valid('osm', 'oa', 'wof', 'gn')).description("The originating source of the data. One or more of ['osm', 'oa', 'wof', 'gn']. Currently only 'osm', 'wof' and 'gn' are supported."),
  layers: _joi2.default.array().items(_joi2.default.string().valid('venue', 'address', 'street', 'neighbourhood', 'borough', 'localadmin', 'locality', 'county', 'macrocounty', 'region', 'macroregion', 'county', 'coarse')).description(' The administrative hierarchy level for the query. Refer to https://github.com/pelias/documentation/blob/master/search.md#filter-by-data-type for details.'),

  size: _joi2.default.number().description('The amount of results returned. Default 10').default(10),
  host: _joi2.default.string().default('https://api.openrouteservice.org/geocode/search/structured').description('Determines the API url.'),
  mime_type: _joi2.default.string().valid(['application/json']).default('application/json').description('Determines the mime type of request.')
}).unknown(false);

exports.default = schema;