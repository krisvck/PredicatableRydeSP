'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var schema = _joi2.default.object().keys({
  api_key: _joi2.default.string().description('Your openrouteservice API key'),
  locations: _joi2.default.array().min(1).max(50).items(_joi2.default.array().length(2).required()).required().description('a single location, or a list of locations, where a location is a list or tuple of lng,lat values'),
  sources: _joi2.default.array().items(_joi2.default.string().default('all')).description("A list of indices that refer to the list of locations (starting with 0) or 'all'").default('all'),
  destinations: _joi2.default.array().items(_joi2.default.string().default('all')).description("A list of indices that refer to the list of locations (starting with 0) or 'all'").default('all'),
  profile: _joi2.default.string().valid(['driving-car', 'driving-hgv', 'foot-walking', 'foot-hiking', 'cycling-regular', 'cycling-road', 'cycling-mountain', 'cycling-electric', 'wheelchair']).default('driving-car').description('Specifies the mode of transport to use when calculating directions.'),
  units: _joi2.default.string().valid(['m', 'km', 'mi']).description('Specifies the units of response.'),
  format: _joi2.default.string().valid(['json']).default('json').description('Specifies which geometry format should be returned.'),
  metrics: _joi2.default.array().items(_joi2.default.string().valid('duration', 'distance')).description('Specifies a list of returned metrics.'),
  optimized: _joi2.default.boolean().default(true),
  service: _joi2.default.string().default('matrix').description('Determines the service endpoint to be used.'),
  api_version: _joi2.default.string().valid(['v2']).default('v2').description('Determines the API version to be used.'),
  host: _joi2.default.string().default('https://api.openrouteservice.org/matrix').description('Determines the API url.'),
  mime_type: _joi2.default.string().valid(['application/json']).default('application/json').description('Determines the mime type of request.')
}).unknown(false);

exports.default = schema;